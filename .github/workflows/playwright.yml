name: Playwright Tests
on:
  push:
    # branches: [ main, master ]
    branches: [ main ]
  # pull_request:
  #   branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: $env.STAGING=0
      run: npx playwright test
      env:
        CI: true
        USER_NAME: ${{ secrets.USER_NAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        STAGING: ${{ secrets.STAGING }}
        STAGING_USER_NAME: ${{ secrets.STAGING_USER_NAME }}
        STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
    - name: Save Screenshots
      uses: actions/upload-artifact@v3
      # if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30

# Staging
on:
  push:
    # branches: [ main, master ]
    branches: [ main ]
  # pull_request:
  #   branches: [ main, master ]
jobs:
  test:
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-node@v3
      with:
        node-version: 16
    - name: Install dependencies
      run: npm ci
    - name: Install Playwright Browsers
      run: npx playwright install --with-deps
    - name: Run Playwright tests
      run: npx playwright test
      env:
        CI: true
        USER_NAME: ${{ secrets.USER_NAME }}
        PASSWORD: ${{ secrets.PASSWORD }}
        STAGING: ${{ secrets.STAGING }}
        STAGING_USER_NAME: ${{ secrets.STAGING_USER_NAME }}
        STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}
    - name: Save Screenshots
      uses: actions/upload-artifact@v3
      # if: always()
      with:
        name: test-results
        path: test-results/
        retention-days: 30
