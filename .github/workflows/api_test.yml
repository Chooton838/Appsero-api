name: Appsero API Tests

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "*/10 * * * *"
  # At the end of every day
  push:
    branches: [develop, master]

env:
  CI: true
  USER_NAME: ${{ secrets.USER_NAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  STAGING: ${{ secrets.STAGING }}
  STAGING_USER_NAME: ${{ secrets.STAGING_USER_NAME }}
  STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}

jobs:
  production_test:
    if: github.ref_name == 'master'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          npm ci
          npm install allure-commandline

      - name: Run Playwright tests on Production
        run: STAGING=0 npx playwright test -g "Login"

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Allure Report Link
        run: echo https://chooton838.github.io/Appsero-api/${{ github.run_number }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "playwright-report/results.xml"
          include_passed: true,
          check_retries: true,
          detailed_summary: true,

      - name: Archive playwright artifacts (screenshots, HTML snapshots, Reports)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 30

      - name: Send Test Report on email
        # if: failure()
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          # user credentials
          # username: ${{ secrets.EMAIL_USERNAME }}
          # password: ${{ secrets.EMAIL_PASSWORD }}
          username: "chooton@wedevs.com"
          password: "Ca-2205."
          # email subject
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}. Allure Report Link":" https://chooton838.github.io/Appsero-api/${{ github.run_number }}
          # comma-separated string, send email to
          to: choton838@gmail.com
          # from email name
          from: Appsero API Automation Test
          attachments: ./playwright-report/index.html

  staging_test:
    if: github.ref_name == 'develop'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Install dependencies
        run: |
          npm ci
          npm install allure-commandline

      - name: Run Playwright tests on Staging
        run: STAGING=1 npx playwright test --grep @gitactiontest

      - name: Get Allure history
        uses: actions/checkout@v3
        if: always()
        continue-on-error: true
        with:
          ref: gh-pages
          path: gh-pages

      - name: Allure Report action
        uses: simple-elf/allure-report-action@master
        if: always()
        id: allure-report
        with:
          allure_results: allure-results
          gh_pages: gh-pages
          allure_report: allure-report
          allure_history: allure-history

      - name: Deploy report to Github Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v2
        env:
          PERSONAL_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
          PUBLISH_BRANCH: gh-pages
          PUBLISH_DIR: allure-history

      - name: Allure Report Link
        if: always()
        run: echo https://chooton838.github.io/Appsero-api/${{ github.run_number }}

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "playwright-report/results.xml"
          include_passed: true,
          check_retries: true,
          detailed_summary: true,

      - name: Archive playwright artifacts (screenshots, HTML snapshots, Reports)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 30

      - name: Send Test Report on email
        # if: failure()
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          # mail server settings
          server_address: smtp.gmail.com
          server_port: 465
          # user credentials
          # username: ${{ secrets.EMAIL_USERNAME }}
          # password: ${{ secrets.EMAIL_PASSWORD }}
          username: "chooton@wedevs.com"
          password: "Ca-2205."
          # email subject
          subject: ${{ github.job }} job of ${{ github.repository }} has ${{ job.status }}
          # email body as text
          body: ${{ github.job }} job in worflow ${{ github.workflow }} of ${{ github.repository }} has ${{ job.status }}. Allure Report Link":" https://chooton838.github.io/Appsero-api/${{ github.run_number }}
          # comma-separated string, send email to
          to: choton838@gmail.com
          # from email name
          from: Appsero API Automation Test
          attachments: ./playwright-report/index.html
