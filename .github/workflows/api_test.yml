name: Appsero API Tests

on:
  workflow_dispatch:
  # schedule:
  #   - cron: "*/10 * * * *"
  # At the end of every day
  push:
    branches: [develop, master]

env:
  CI: true
  USER_NAME: ${{ secrets.USER_NAME }}
  PASSWORD: ${{ secrets.PASSWORD }}
  STAGING: ${{ secrets.STAGING }}
  STAGING_USER_NAME: ${{ secrets.STAGING_USER_NAME }}
  STAGING_PASSWORD: ${{ secrets.STAGING_PASSWORD }}

jobs:
  production_test:
    if: github.ref_name == 'master'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Run Playwright tests on Production
        run: STAGING=0 npx playwright test -g "Login"

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "tests/api/playwright-report/results.xml"
          include_passed: true,
          # check_retries: true,
          # detailed_summary: true,

      # - name: Generate Test Report
      #   uses: phoenix-actions/test-reporting@v8
      #   id: test-report # Set ID reference for step
      #   if: success() || failure() # run this step even if previous step failed
      #   with:
      #     name: api tests result # Name of the check run which will be created
      #     path: tests/api/playwright-report/results.xml # Path to test results
      #     reporter: jest-junit
      #     only-summary: "false" # Allows you to generate only the summary.
      #     list-suites: "all" # Limits which test suites are listed: 'all', 'failed'
      #     list-tests: "all" # Limits which test cases are listed: 'all','failed', 'none'
      #     fail-on-error: "true" # Set action as failed if test report contains any failed test

      - name: Archive playwright artifacts (screenshots, HTML snapshots, Reports)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 30


  staging_test:
    if: github.ref_name == 'develop'
    timeout-minutes: 60
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install dependencies
        run: npm ci
      - name: Run Playwright tests on Staging
        run: STAGING=1 npx playwright test -g "Login"

      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v3
        if: always() # always run even if the previous step fails
        with:
          report_paths: "playwright-report/results.xml"
          include_passed: true,
          # check_retries: true,
          # detailed_summary: true,

      # - name: Generate Test Report
      #   uses: phoenix-actions/test-reporting@v8
      #   id: test-report # Set ID reference for step
      #   if: success() || failure() # run this step even if previous step failed
      #   with:
      #     name: api tests result # Name of the check run which will be created
      #     path: tests/api/playwright-report/results.xml # Path to test results
      #     reporter: jest-junit
      #     only-summary: "false" # Allows you to generate only the summary.
      #     list-suites: "all" # Limits which test suites are listed: 'all', 'failed'
      #     list-tests: "all" # Limits which test cases are listed: 'all','failed', 'none'
      #     fail-on-error: "true" # Set action as failed if test report contains any failed test

      - name: Archive playwright artifacts (screenshots, HTML snapshots, Reports)
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          if-no-files-found: ignore
          retention-days: 30
